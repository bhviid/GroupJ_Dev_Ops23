---
name: Continuous-Deployment

on:
  push:
    # Run workflow every time something is pushed to the main branch
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
      
  # allow manual triggers for now too
  workflow_dispatch:
    manual: true

env:
  CONTAINER_NAME: minitwit
  DOCKER_IMAGE_NAME: $DOCKER_HUB_USERNAME/devops
  DOCKERFILE_NAME: MiniTwitPostgres.Dockerfile
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  POSTGRESS_CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      ## Her skal vi nok have noget integration testing men det er f√∏rst i fremtiden.

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push MiniTwitimage
        uses: docker/build-push-action@v2
        with:
          context: .
          file: $DOCKERFILE_NAME
          push: true
          tags: $DOCKER_IMAGE_NAME:latest
          cache-from: type=registry,ref=$DOCKER_IMAGE_NAME:webbuildcache
          cache-to: type=registry,ref=$DOCKER_IMAGE_NAME:webbuildcache,mode=max


      - name: Deploy to Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DROPLET_IP_ADDRESS }}
          username: ${{ env.DROPLET_USERNAME }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true
            docker pull $DOCKER_IMAGE_NAME:latest
            docker run -d -e connection_string=$POSTGRESS_CONNECTION_STRING --name $CONTAINER_NAME -p 80:80 $DOCKER_IMAGE_NAME:latest
