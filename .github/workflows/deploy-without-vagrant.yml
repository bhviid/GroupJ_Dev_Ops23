name: Manual deploy to server

on:
  workflow_dispatch:
env:
  connection_string: ${{ secrets.POSTGRES_CONNECTION_STRING }}

jobs:
  deploy:
    name: Manual deploy without vagrant
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: make docker directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DROPLET_IP_ADDRESS }}
        username: root
        key: ${{ secrets.SSH_PRIVAT_KEY }}
        script: |
          mkdir -p ~/docker/

    - name: Copy docker-compose.yml to minitwit droplet
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DROPLET_IP_ADDRESS }}
        username: root
        key: ${{ secrets.SSH_PRIVAT_KEY }}
        source: ./Dockerfiles/minitwit-compose/docker-compose.yml
        target: ~/docker/docker-compose.yml

    - name: Copy prometheus.yml to minitwit droplet
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DROPLET_IP_ADDRESS }}
        username: root
        key: ${{ secrets.SSH_PRIVAT_KEY }}
        source: prometheus.yml
        target: ~/docker/prometheus.yml

    - name: SSH into minitwit droplet, do a docker pull and run docker-compose
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DROPLET_IP_ADDRESS }}
        username: root
        key: ${{ secrets.SSH_PRIVAT_KEY }}
        script: |
          sudo ufw allow 3000
          sudo ufw allow 5235
          sudo ufw reload
          sudo apt-get update
          sudo apt-get install ca-certificates curl gnupg lsb-release
          sudo mkdir -m 0755 -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-compose-plugin -y
          docker compose version
          docker kill minitwit
          docker rm minitwit
          cd ~/docker
          docker-compose pull && docker-compose up -d
    
    - name: make docker directory for sim droplet
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DROPLET_IP_ADDRESS_SIM }}
        username: root
        key: ${{ secrets.SSH_PRIVAT_KEY }}
        script: |
          mkdir -p ~/docker/

    - name: Copy docker-compose.yml to sim droplet
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DROPLET_IP_ADDRESS_SIM }}
        username: root
        key: ${{ secrets.SSH_PRIVAT_KEY }}
        source: ./Dockerfiles/slimtwit-compose/docker-compose.yml
        target: ~/docker/docker-compose.yml

    - name: Copy prometheus.yml to sim droplet
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DROPLET_IP_ADDRESS_SIM }}
        username: root
        key: ${{ secrets.SSH_PRIVAT_KEY }}
        source: prometheus.yml
        target: ~/docker/prometheus.yml

    - name: SSH into sim droplet, do a docker pull and run docker-compose
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DROPLET_IP_ADDRESS_SIM }}
        username: root
        key: ${{ secrets.SSH_PRIVAT_KEY }}
        script: |
          sudo ufw allow 3000
          sudo ufw allow 5236
          sudo ufw reload
          sudo apt-get update
          sudo apt-get install ca-certificates curl gnupg lsb-release
          sudo mkdir -m 0755 -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-compose-plugin -y
          docker compose version
          docker kill minitwit
          docker rm minitwit
          cd ~/docker
          docker-compose pull && docker-compose up -d
