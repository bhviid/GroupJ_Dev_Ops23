@page "/register"
@inject HttpClient http
@inject NavigationManager navigation
@inject UserService uService
<PageTitle>Sign Up</PageTitle>

<h2>Sign Up</h2>

@if (ErrorMessageLabel is not null)
{
    <div class="error">
        <label>@ErrorMessageLabel</label>
    </div>
}



<EditForm Model="@registerModel" OnSubmit="@SignUp">
    Username:<br>

    &emsp;&emsp;&emsp;
    <InputText @bind-Value="@registerModel.Username" /> <br>

    E-Mail:<br>

    &emsp;&emsp;&emsp;
    <InputText @bind-Value="@registerModel.Email" /> <br>

    Password:<br>

    &emsp;&emsp;&emsp;
    <InputText type="password" @bind-Value="@registerModel.Password" /> <br>

    Password (repeat):<br>

    &emsp;&emsp;&emsp;
    <InputText type="password" @bind-Value="@registerModel.PasswordRepeat" /> <br>

    <button type="submit">Sign Up</button>
</EditForm>

@code {
    
    private string? ErrorMessageLabel;
    private RegisterModel registerModel = new();

    private async void SignUp()
    {
        var content = Utility_Methods.stringify_object(new UserCreateDTO(
        registerModel.Username,
        registerModel.Email,
        registerModel.Password,
        registerModel.PasswordRepeat)
        );
        var resp = await http.PostAsync("minitwit/register", content);
        if (resp.IsSuccessStatusCode)
        {
            uService.ActiveUser = await resp.Content.ReadFromJsonAsync<User>();;
            navigation.NavigateTo("/");
        }
        else
        {
            ErrorMessageLabel = resp.ReasonPhrase;
            StateHasChanged();
        }
    }
}

