@page "/{username}"
@inject HttpClient http
@inject NavigationManager navigation
@inject UserService uService

<h2>@username timeline</h2>

@if (uService.ActiveUser is not null)
{
    <div class=followstatus>
        @if(uService.ActiveUser.Username == username)
        {
            <span>this is you!</span>
        }
        else 
        {
            if(Followed)
            {
                <span>You are currently following this user.</span>
                <a class=unfollow @onclick="HandleUnFollow">
                    Unfollow user
                </a>
            }
            else 
            {
                <span>You are not yet following this user.</span>
                <a class=follow @onclick="HandleFollow">
                    Follow user
                </a>
            }
        }
    </div>
}
<TwitDisplayer TwitData="TwitData" />

@code 
{
    private User? User;

    public bool Followed { get; set; }

    [Parameter]
    public string? username { get; set; }

    public List<MsgDataPair> TwitData { get; set; } = new List<MsgDataPair>();

    protected override async Task OnInitializedAsync()
    {
        User = uService.ActiveUser;
        var httpRes = await http.GetAsync($"/minitwit/{username}");

        if(!httpRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/public");
            return;
        }
        var res = await httpRes.Content.ReadFromJsonAsync<MsgDataPair[]>();

        if(User is not null)
        {
            Followed = await http.GetFromJsonAsync<bool>($"/minitwit/is-follower/{User.Username}/{username}");
        }
        
        TwitData = res!.ToList();        
    }

    private async Task HandleFollow()
    {
        var resp = await http.PostAsJsonAsync<User>($"/minitwit/{username}/follow", User);
        if(resp.IsSuccessStatusCode)
        {
            //Tell the user that they are indeed following the user...
            Followed = true;
        }
        else
        {
            //Alert user that something went wrong?
        }
    }

    private async Task HandleUnFollow()
    {
        var resp = await http.PostAsJsonAsync<User>($"/minitwit/{username}/unfollow", User);

        if(resp.IsSuccessStatusCode)
        {
            //Tell the user that they are indeed following the user...
            Followed = false;
        }
        else
        {
            //Alert user that something went wrong?
        }
    }
}