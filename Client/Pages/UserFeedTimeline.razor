@page "/"
@inject HttpClient http
@inject NavigationManager navigation

<h2>public timeline</h2>
@if (User is not null)
{    
    <div class=twitbox>
    <h3>What's on your mind @User.Username?</h3>
    <form action="{{ url_for('add_message') }}" method=post>
        <p>
            <input type=text name=text size=60>
                
            <input type=submit value="Share">
        </p>
    </form>
    </div>
}

<TwitDisplayer TwitData="TwitData" Gravatars="gravatars" />

@code 
{
    [CascadingParameter]
    public User? User {get; set;}

    public List<MsgDataPair> TwitData { get; set; } = new List<MsgDataPair>();
    private Dictionary<string, string> gravatars = new Dictionary<string, string>();
    private int gravatarSize = 48;

    protected override async Task OnInitializedAsync()
    {
        MsgDataPair[] res;
        if(User is not null)
        {
            // Feed of active user when at "/"
            res = await http.GetFromJsonAsync<MsgDataPair[]>($"/minitwit/feed/{User.UserId}") ?? Array.Empty<MsgDataPair>(); 
        }
        else 
        {
            navigation.NavigateTo("/public");
            return; 
        }
        
        foreach(var m in res!)
        {
            var authormail = m.Item2.email;
            gravatars[authormail] = await http.GetStringAsync($"/minitwit/md5/{authormail}/{gravatarSize}");
        }
        TwitData = res!.ToList();
    }
}