@inject HttpClient http

<ul class=messages>
    <Virtualize ItemsProvider="@Provider" Context="msgAuthor">
        <ItemContent>
            <li>
                <img src=@msgAuthor.Author.gravatar>
                <p>
                    <strong>
                        <a href="@msgAuthor.Author.username">@msgAuthor.Author.username</a>
                    </strong>
                    @msgAuthor.Msg.Text
                    <small>&mdash; @msgAuthor.Msg.PubDate?.ToString("yyyy MM dd @ HH:mm",
                        DateTimeFormatInfo.InvariantInfo)
                    </small>
                </p>
            </li>
        </ItemContent>
        <Placeholder>
            <li><em>There's no message so far.</em></li>
        </Placeholder>
    </Virtualize>
</ul>

@code
{
    [Parameter]
    public Func<int, int, Task<MsgDataAndLength>> Fetcher { get; set; }

    [Parameter]
    public bool ReFetch { get; set; }

    private async ValueTask<ItemsProviderResult<MsgDataPair>> Provider(ItemsProviderRequest req)
    {
        //var numItems = Math.Min(req.Count, totelNum - req.StartIndex);
        var (totalLength, data) = await Fetcher(req.StartIndex, req.Count);


        return new ItemsProviderResult<MsgDataPair>(data, totalLength);
    }
}